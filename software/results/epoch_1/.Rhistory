df = read.csv("1494229237.737923_1494219597_2_1000.csv")
df
df = read.csv("1494229237.737923_1494219597_2_1000.csv", stringsAsFactors=F)
df
df[,5]
max(df[,5])
df[,5] == .86
df[,5]
plot(df[,5])
plot(df[,5], pch=20)
df
df[,2]
df[,1]
min(df[,1])
max(df[,1])
df
min(df[,2])
max(df[,2])
min(df[,4])
max(df[,4])
png("complete.png")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites", xlab=)
png("complete.png")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites", xlab="Support Vector Machine Predictor", ylab="Mean accuracy")
dev.off()
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites", xlab="Support Vector Machine Predictor", ylab="Mean accuracy", width=5in)
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites", xlab="Support Vector Machine Predictor", ylab="Mean accuracy")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites between 2 and 1000", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites between 2 and 1000", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites (2-100)", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites (2-1000)", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
png("complete.png")
plot(df[,5], pch=20, main="Binary Classification: Primes vs Composites (2-1000)", xlab="Support Vector Machine Predictor", ylab="Mean Accuracy")
dev.off()
df[df[,2] == 1]
df
df[df[,1] == 2]
df[df[,1] == 2]
df[,1]
df[df[,1] == 2]
df[df[,c(1)] == 2]
df$X2
head(df)
colnames(df)
colnames(df) <- c("Base b","C","Kernel","Weight","Accuracy")
df
head(df)
colnames(df) <- c("base","c","kernel","weight","accuracy")
df[df$base == 2]
df$base
df[df$base = 2]
df[df$base == 2,]
df_base_2 = df[df$base == 2,]
df_base_2
df_base_2[df_base_2$c == 1,]
plot(df_base_2[df_base_2$c == 1,])
df_base_2[df_base_2$c == 1,]
df_b2_c1 = df_base_2[df_base_2$c == 1,]
df_b2_c1
df_b2_c1$weight
plot(df_b2_c1$weight, df_b2_c1$accuracy)
q()
plot(df_b2_c1$weight, df_b2_c1$accuracy)
plot(df_b2_c1$weight~df_b2_c1$accuracy)
plot(df_b2_c1$weight, df_b2_c1$accuracy)
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="Base 2, C = 1.0", xlab="Prime Class Weight", ylab="Mean Accuracy")
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM(Kernel: "rbf", Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM(Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
install.packages("extrafont")
library(extrafont)
font_import()
bitmap(“FileName.tiff", height = 12, width = 17, units = 'cm', 
bitmap(“c_demo.tiff", height = 12, width = 17, units = 'cm', type = "tifflzw", res = 300)
bitmap("c_demo.tiff", height = 12, width = 17, units = 'cm', type = "tifflzw", res = 300)
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
dev.off()
tiff("c_demo.tiff", height = 12, width = 17, units = 'cm', type = "lzw", res = 300)
tiff("c_demo.tiff", height = 12, width = 17, units = 'cm', compression = "lzw", res = 300)
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
dev.off()
png("c_demo.png", height = 12, width = 17, units = 'cm', res = 300)
plot(df_b2_c1$weight, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
dev.off()
df_w5 = df[df$weight == 5,]
df_w5
df_w5_b6 = df_w5[df_w5$base == 6,]
df_w5_b6
png("c_demo.png", height = 12, width = 17, units = 'cm', res = 300)
plot(df_w5_b66$c, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
plot(df_w5_b6$c, df_b2_c1$accuracy, main="SVM (Kernel: rbf, Base: 2, C: 1.0)", xlab="Prime Class Weight", ylab="Mean Accuracy")
df_w5_b6
plot(df_w5_b6$c, df_w5_b6$accuracy, main="SVM (Kernel: rbf, Base: 6, Weight: 5)", xlab="Penalty Parameter C", ylab="Mean Accuracy")
dev.off()
df_w5_b6
df_w5 = df[df$weight == 5,]
df_w5_c3.5 = df_w5[df_w5$c == 3.5,]
df_w5_c3.5
png("base_demo.png", height = 12, width = 17, units = 'cm', res = 300)
plot(df_w5_c3.5$base, df_w5_c3.5$accuracy, main="SVM (Kernel: rbf, Weight: 5,C: 3.5)", xlab="Base b Representation", ylab="Mean Accuracy")
dev.off()
max(df_w5_c3.5$accuracy)
df
df[df$accuracy == max(df$accuracy),]
df[df$accuracy == max(df$accuracy),]
df[df$accuracy == max(df$accuracy),]
list.files()
list.files(..)
list.files("..")
list.files("../epoch_2/")
df_2 = read.csv("../epoch_2/1494266715.335319_1494219597_2_1000.csv", stringsAsFactors=F)
df_2[df_2$accuracy == max(df_2$accuracy),]
colnames(df_2) <- c("base","c","kernel","weight","accuracy")
df_2[df_2$accuracy == max(df_2$accuracy),]
df_3 = read.csv("../epoch_3/Baf", stringsAsFactors=F)
colnames(df_3) <- c("base","c","kernel","weight","accuracy")
df_3[df_3$accuracy == max(df_3$accuracy),]
q()
df
head(df)
plot(df)
png("complete.png", height = 12, width = 17, units = 'cm', res = 300)
plot(df$accuracy, main="SVM", xlab="Model", ylab="Mean Accuracy")
dev.off()
png("complete.png", height = 12, width = 17, units = 'cm', res = 300)
plot(df$accuracy, main="Binary Classification: Primes vs Composites (2-1000)", xlab="Support Vector Machine Classifier", ylab="Mean Accuracy", pch=20)
dev.off()
2**1:4
(2**1:4) %% 5
(2**1:4)
(2**(1:4))
(2**(1:4)) %% 5
(3**(1:4)) %% 5
(4**(1:4)) %% 5
(1**(1:5)) %% 6
(2**(1:5)) %% 6
(3**(1:5)) %% 6
(4**(1:5)) %% 6
(5**(1:5)) %% 6
4*4
4*4 * 4
q()
